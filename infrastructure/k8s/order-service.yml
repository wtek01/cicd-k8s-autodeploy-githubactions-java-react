apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: ${NAMESPACE}
  labels:
    app: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
        - name: order-service
          image: wtek01/order-service:0.3.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8082
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka:9092"
            - name: DB_HOST
              value: "postgres"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: "orderdb"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: "none"
            - name: SPRING_JPA_OPEN_IN_VIEW
              value: "false"
            - name: SPRING_FLYWAY_BASELINE_ON_MIGRATE
              value: "true"
            - name: SPRING_MAIN_LAZY_INITIALIZATION
              value: "true"
          # Sondes désactivées temporairement pour permettre le démarrage
          # startupProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: 8082
          #   initialDelaySeconds: 180
          #   periodSeconds: 30
          #   failureThreshold: 20
          #   timeoutSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: 8082
          #   initialDelaySeconds: 240
          #   periodSeconds: 20
          #   failureThreshold: 6
          #   timeoutSeconds: 10
          # livenessProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: 8082
          #   initialDelaySeconds: 300
          #   periodSeconds: 30
          #   failureThreshold: 3
          #   timeoutSeconds: 10
          resources:
            limits:
              memory: "384Mi"
              cpu: "300m"
            requests:
              memory: "128Mi"
              cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: ${NAMESPACE}
  labels:
    app: order-service
spec:
  selector:
    app: order-service
  ports:
    - port: 8082
      targetPort: 8082
      name: http
