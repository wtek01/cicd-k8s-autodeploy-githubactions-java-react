apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: microservices
  labels:
    app: frontend
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        checksum/config: "20019977"
        timestamp: "20019977"
    spec:
      containers:
        - name: frontend
          image: wtek01/frontend:20019977
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: frontend-config
          env:
            - name: VITE_ENVIRONMENT
              value: "kubernetes"
            - name: ENVIRONMENT
              value: "kubernetes"
            - name: VITE_USER_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: VITE_USER_SERVICE_URL
            - name: USER_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: VITE_USER_SERVICE_URL
            - name: VITE_ORDER_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: VITE_ORDER_SERVICE_URL
            - name: ORDER_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: VITE_ORDER_SERVICE_URL
            - name: VITE_API_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: VITE_API_BASE_URL
            - name: API_URL
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: VITE_API_BASE_URL
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          startupProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 12
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 3
            timeoutSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: microservices
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
      name: http
  type: ClusterIP
